name: OpenShift CI/CD Workflow

env:
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: "delta-dev"
  APP_NAME: "course-service"
  APP_PORT: "1030"
  IMAGE_REGISTRY: image-registry.openshift-image-registry.svc:5000/delta-dev
  IMAGE_TAGS: "latest"

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - staging

jobs:
  openshift-ci-cd:
    name: Build, Push, and Deploy to OpenShift
    runs-on: ubuntu-20.04

    steps:
      - name: Check for required secrets
        uses: actions/github-script@v6
        with:
          script: |
            const secrets = {
              OPENSHIFT_SERVER: `${{ secrets.OPENSHIFT_SERVER }}`,
              OPENSHIFT_TOKEN: `${{ secrets.OPENSHIFT_TOKEN }}`
            };

            const missingSecrets = Object.entries(secrets).filter(([key, value]) => !value);
            if (missingSecrets.length > 0) {
              core.setFailed(`The following secrets are missing: ${missingSecrets.map(([key]) => key).join(', ')}`);
            }

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Update Git submodules
        run: git submodule update --init --recursive

      - name: Build Docker image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          dockerfiles: ./CourseServiceAPI/Dockerfile

      - name: Push Docker image to OpenShift registry
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: $(oc whoami)
          password: $(oc whoami -t)

      - name: Set Registry Path as Environment Variable
        run: echo "REGISTRY_PATH=${{ steps.push-image.outputs.registry-path }}/${{ env.APP_NAME }}" >> $GITHUB_ENV

      - name: Install OpenShift CLI
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}

      - name: Create and expose OpenShift application
        id: deploy-and-expose
        uses: redhat-actions/oc-new-app@v1
        with:
          app_name: ${{ env.APP_NAME }}
          image: ${{ env.REGISTRY_PATH }}
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
          port: ${{ env.APP_PORT }}

      - name: Print application URL
        run: |
          echo "Your application is deployed and accessible at:"
          oc get route ${{ env.APP_NAME }} -o jsonpath='{.spec.host}'
